@using DevExtreme.AspNet.Mvc
<link rel="stylesheet" href="~/css/vendor.css" asp-append-version="true" />

@(Html.DevExtreme().DataGrid<ConsolidateResult>()
            .ID("allsalesReport-list")
             .DataSource(ds => ds
             .Mvc()
             .Controller("ConsolidatedReport")
             .LoadAction("GetDocumentList")
             .Key("code")
              .LoadParams(Model)
             )
           .Columns(columns =>
            {
                columns.Add().DataField("code").Visible(true);
                columns.Add().DataField("issuedDate").Caption("Issued Date").Width(200);
                columns.Add().DataField("semId").Caption("SEM ID").Width(200);
                columns.Add().DataField("customerName").Caption("Customer Name").Width(200);
                columns.Add().DataField("idNumber").Caption("TIN");
                columns.Add().DataField("userName").Caption("User Name");
                columns.Add().DataField("machineNumber").Caption("Machine Number");
                columns.Add().DataField("sku").Caption("SKU");
                columns.Add().DataField("brand").Caption("Brand");
                columns.Add().DataField("packType").Caption("Pack Type");
                columns.Add().DataField("qty").Caption("Qty");
                columns.Add().DataField("priceBeforeVat").Caption("Price Before VAT").Format("#,##0.00");
                columns.Add().DataField("vat").Caption("VAT").Format("#,##0.00");
                columns.Add().DataField("distributer").Caption("Distributor");
                columns.Add().DataField("sector").Caption("Sector ID");
                columns.Add().DataField("grandTotal").Caption("Grand Total").Format("#,##0.00");
                columns.Add().DataField("trxType").Caption("Sales Type");
            })

            .Paging(p => p.PageSize(150))
            .Scrolling(s => s.Mode(DevExtreme.AspNet.Mvc.GridScrollingMode.Infinite))
            .Height(500)
            .FilterRow(f => f.Visible(true))
            .HeaderFilter(f => f.Visible(true))
            .SearchPanel(p => p.Visible(false).Width(500))
            .GroupPanel(p => p.Visible(false))
            .Grouping(g => g.AutoExpandAll(false))
            .RemoteOperations(false)
            .RowAlternationEnabled(true)
            .AllowColumnResizing(true)
            .ColumnAutoWidth(true)
            .ShowBorders(true)
            .ColumnChooser(c => c.Enabled(false))
            .Summary(s => s
            .TotalItems(totalItems =>
            {
                totalItems.AddFor(m => m.id).SummaryType(SummaryType.Count);
                totalItems.AddFor(m => m.priceBeforeVat).SummaryType(DevExtreme.AspNet.Mvc.SummaryType.Sum).CustomizeText("formatNumber");
                totalItems.AddFor(m => m.vat).SummaryType(DevExtreme.AspNet.Mvc.SummaryType.Sum).CustomizeText("formatNumber");
                totalItems.AddFor(m => m.grandTotal).SummaryType(DevExtreme.AspNet.Mvc.SummaryType.Sum).CustomizeText("formatNumber");
               
            })
             .GroupItems(groupItems =>
            {
                groupItems.Add().SummaryType(SummaryType.Count);
            })
            )
        
          )
    <script>
        function formatNumber(number) {
            var numberStr;
            if (number.value) {
                if (number.value < 0) {
                    numberStr = '(' + (number.value.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",") * -1) + ')'
                }
                else {
                    numberStr = number.value.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",")
                }
            } else {
                numberStr = '0.00'
            }
            return numberStr;
        }
    </script>