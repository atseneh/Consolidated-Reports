@using DevExtreme.AspNet.Mvc
@model ConsolidateActivitySearchModel
<link rel="stylesheet" href="~/css/vendor.css" asp-append-version="true" />

<style>
    .custom-button {
        background-color: #ff895e;
        color: #fff;
        border: none;
        cursor: pointer;
        font-size: 18px;
        color: white !important;
        text-decoration: none !important;
        padding: 0 7px 5px 7px !important;
        text-align: center;
    }
</style>
@(Html.DevExtreme().DataGrid<ConsolidateActivityResult>()
    .ID("consolidate-activity-list")
    .DataSource(ds => ds
        .Mvc()
        .Controller("ActivityReport")
        .LoadAction("GetDocumentList_Activity")
        .Key("distributor")
        .LoadParams(Model)
    )
    .Columns(columns =>
    {
        columns.Add()
           .Name("x")
           .Type(GridCommandColumnType.Buttons)
           .Width(40)
           .Buttons(b =>
           {
               b.Add()
               .Name("show")
               .Text("....")
               .CssClass("custom-button")
               .OnClick("showDocumentDetail");
           });
        columns.Add().DataField("distributor").Caption("Distributor").Width(200);
        columns.Add().DataField("earliestActivityToday").Caption("Earliest Activity").Width(200);
        columns.Add().DataField("latestActivityToday").Caption("Latest Activity").Width(200);
        columns.Add().DataField("lastseen").Caption("Last Seen");
        columns.Add().DataField("vsmCounts").Caption("Total VSM");
        columns.Add().DataField("totalSKU").Caption("No SKU");
        columns.Add().DataField("totalTransactions").Caption("Total Transactions");
        columns.Add().DataField("voulumeSum").Caption("Sum of Quantity");
        columns.Add().DataField("totalSales").Caption("Total Sales").Format("#,##0.00");
    })
    .Paging(p => p.PageSize(150))
    .Scrolling(s => s.Mode(DevExtreme.AspNet.Mvc.GridScrollingMode.Infinite))
    .Height(500)
    .FilterRow(f => f.Visible(false))
    .HeaderFilter(f => f.Visible(false))
    .SearchPanel(p => p.Visible(false).Width(500))
    .GroupPanel(p => p.Visible(false))
    .Grouping(g => g.AutoExpandAll(false))
    .RemoteOperations(false)
    .RowAlternationEnabled(true)
    .AllowColumnResizing(true)
    .ColumnAutoWidth(true)
    .ShowBorders(true)
    .ColumnChooser(c => c.Enabled(false))
    .Summary(s => s
    .TotalItems(totalItems =>
    {
        totalItems.AddFor(m => m.totalSales).SummaryType(DevExtreme.AspNet.Mvc.SummaryType.Sum).CustomizeText("formatNumber");
        // Add summary configurations here if needed
    })
    )
)
<input asp-for="uploadDate" hidden value="@Model.uploadDate" />

<script>
     function formatNumber(number) {
        var numberStr;
        if (number.value) {
            if (number.value < 0) {
                numberStr = '(' + (number.value.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",") * -1) + ')'
            }
            else {
                numberStr = number.value.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",")
            }
        } else {
            numberStr = '0.00'
        }
        return numberStr;
    }
</script>
<script>
      function showDocumentDetail(e) {
        // Get the row data from the event
        var rowData = e.row.data;
        var distributor = rowData.distributor;

        console.log("Selected distributor:", distributor);

        // Pass the distributor to the update function
        updateDataGrid(distributor);
        $('#detailModal').modal({ backdrop: 'static', keyboard: false });
    }

    function updateDataGrid(distributor) {
        var grid = $("#consolidate-activityDetail-list").dxDataGrid('instance');
        if (grid) {
            grid.option('dataSource', {
                load: function (loadOptions) {
                    return $.ajax({
                        url: '@Url.Action("GetDocumentList_Activity_Detail", "ActivityReport")',
                        data: { Distributor: distributor,uploadDate:$('#@nameof(Model.uploadDate)').val()},  // Pass the distributor value here
                        type: 'GET',
                        dataType: 'json'
                    });
                }
            });
            grid.refresh();
        }
    }
</script>
